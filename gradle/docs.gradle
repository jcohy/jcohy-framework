configurations {
	asciidoctorExt
}

dependencies {
	asciidoctorExt("io.spring.asciidoctor:spring-asciidoctor-extensions-block-switch:0.4.0.RELEASE")
}

/**
 * Produce Javadoc for all Jcohy Framework modules in "build/docs/javadoc"
 */
task api(type: Javadoc) {
	group = "Documentation"
	description = "Generates aggregated Javadoc API documentation."
	title = "${rootProject.description} ${version} API"

	dependsOn {
		javaProjects.collect {
			it.tasks.getByName("jar")
		}
	}

	doFirst {
		classpath += files(javaProjects.collect { it.sourceSets.main.compileClasspath })
	}

	options {
		encoding = "UTF-8"
		charSet = "UTF-8"
		docTitle = "Jcohy Framework ${project.version} API"
		memberLevel = JavadocMemberLevel.PROTECTED
		author = true
		header = rootProject.description
		use = true
		outputLevel = "quiet"
		overview = "src/docs/api/overview.html"
		stylesheetFile = file("${rootDir}/src/docs/api/javadoc.css")
		splitIndex = true
		windowTitle = "Jcohy Framework ${project.version} API"
		options.links = [
				"https://docs.oracle.com/javase/8/docs/api/",
				"https://docs.oracle.com/javaee/7/api/",
				"https://docs.spring.io/spring-framework/docs/5.2.7.RELEASE/javadoc-api/",
				"https://docs.spring.io/spring-security/site/docs/5.2.5.RELEASE/api/",
				"https://docs.spring.io/spring-data/jpa/docs/2.2.8.RELEASE/api/",
				"https://docs.spring.io/spring-security/site/docs/5.3.2.RELEASE/api/",
		] as String[]
	}

	source javaProjects.collect { project ->
		project.sourceSets.main.allJava
	}
	maxMemory = "1024m"
	destinationDir = file("$buildDir/docs/javadoc")
}

ext {
	highlightjsdir = "http://resources.jcohy.com/js/highlight"
	highlightjsTheme = "github"
	sourceHighlighter = "highlight.js"
}

task extractDocResources(type: Copy) {
	from "./src/main/resources"
	into "$buildDir/docs/docs-resources"
}

asciidoctorj {
	modules {
		pdf {
			version '1.5.0-beta.8'
		}
	}
	fatalWarnings ".*"
}

asciidoctor {
	baseDirFollowsSourceDir()
	configurations 'asciidoctorExt'
	sources {
		include '*.adoc'
	}
	outputDir "$buildDir/docs/ref-docs/"
	resources {
		from(sourceDir) {
			include 'images/*', 'css/**', 'js/**'
		}
		from extractDocResources
	}
	logDocuments = true
	// 强制每次都重新生成
	outputs.upToDateWhen { false }
	outputOptions {
		backends = ["html5", "pdf"]
	}
	options doctype: 'book', eruby: 'erubis'
	attributes([
			icons               : 'font',
			'source-highlighter': "${sourceHighlighter}",
			highlightjsdir      : "${highlightjsdir}",
			'highlightjs-theme' : "${highlightjsTheme}",
			stylesdir           : "$buildDir/docs/docs-resources/css",
			stylesheet          : 'stylesheet.css',
	])
}

asciidoctor.dependsOn extractDocResources

/**
 * Zip all docs (API and reference) into a single archive
 */
task docsZip(type: Zip, dependsOn: ['api', 'asciidoctor']) {
	group = "Distribution"
	description = "Builds -${archiveClassifier} archive containing api and reference " +
			"for deployment at https://gitee.com/jcohy/jcohy-framework"

	archiveBaseName.set("jcohy")
	archiveClassifier.set("docs")
	from("src/dist") {
		include "changelog.txt"
	}
	from(api) {
		into "${VERSION}/javadoc-api"
	}
	from("$asciidoctor.outputDir") {
		into "${VERSION}/jcohy-framework-reference"
	}
//	from ("$asciidoctor.outputDir/pdf") {
//		into "spring-framework-reference/pdf"
//	}
}